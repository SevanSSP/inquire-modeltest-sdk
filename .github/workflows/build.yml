# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app inquire_modeltest_SDK

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
  workflow_dispatch:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: inquire_modeltest_SDK

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  build:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: 'ubuntu-latest'

    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to registry
      uses: docker/login-action@v1
      with:
        registry: https://ghcr.io/
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}


    - name: Get version
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention if commit is tagged "master" (does not affect vx.y.z tags)
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
        echo VERSION=$VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build and push container image to registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.IMAGE_ID }}:${{ env.VERSION }}
        file: ./Dockerfile
